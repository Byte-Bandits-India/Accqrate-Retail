// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types



type PagesPageConfig = {
  default: React.ComponentType<any> | ((props: any) => React.ReactNode | Promise<React.ReactNode> | never | void)
  getStaticProps?: (context: any) => Promise<any> | any
  getStaticPaths?: (context: any) => Promise<any> | any
  getServerSideProps?: (context: any) => Promise<any> | any
  getInitialProps?: (context: any) => Promise<any> | any
  /**
   * Segment configuration for legacy Pages Router pages.
   * Validated at build-time by parsePagesSegmentConfig.
   */
  config?: {
    amp?: boolean | 'hybrid' | string // necessary for JS
    maxDuration?: number
    runtime?: 'edge' | 'experimental-edge' | 'nodejs' | string // necessary unless config is exported as const
    regions?: string[]
  }
}






// Validate ../../src/pages/_app.tsx
{
  const handler = {} as typeof import("../../src/pages/_app.js")
  handler satisfies PagesPageConfig
}

// Validate ../../src/pages/accqrate.tsx
{
  const handler = {} as typeof import("../../src/pages/accqrate.js")
  handler satisfies PagesPageConfig
}

// Validate ../../src/pages/choose.tsx
{
  const handler = {} as typeof import("../../src/pages/choose.js")
  handler satisfies PagesPageConfig
}

// Validate ../../src/pages/index.tsx
{
  const handler = {} as typeof import("../../src/pages/index.js")
  handler satisfies PagesPageConfig
}

// Validate ../../src/pages/pos.tsx
{
  const handler = {} as typeof import("../../src/pages/pos.js")
  handler satisfies PagesPageConfig
}

// Validate ../../src/pages/sales.tsx
{
  const handler = {} as typeof import("../../src/pages/sales.js")
  handler satisfies PagesPageConfig
}

// Validate ../../src/pages/tools.tsx
{
  const handler = {} as typeof import("../../src/pages/tools.js")
  handler satisfies PagesPageConfig
}

// Validate ../../src/pages/transform.tsx
{
  const handler = {} as typeof import("../../src/pages/transform.js")
  handler satisfies PagesPageConfig
}




